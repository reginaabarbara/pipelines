name: Abordagem 2

on:
  push:
    branches:
      - main
      - dev
      - stage
    paths:
      - libs/common/**

  workflow_dispatch:

jobs:
  build-applications:
    strategy:
      matrix:
        combination:
          - "admin-portal:admin-portal:admin-portal"
          - "authentication:authentication:authentication"
          - "brand/read:brand-read:brand/read"
          - "brand/sync:brand-sync:brand/sync"
          - "brand/write:brand-write:brand/write"
          - "campaign/read:campaign-read:campaign/read"
          - "campaign/sync:campaign-sync:campaign/sync"
          - "campaign/write:campaign-write:campaign/write"
          - "completion/read:completion-read:completion/read"
          - "completion/sync:completion-sync:completion/sync"
          - "completion/write:completion-write:completion/write"
          - "import/api:import-api:import/api"
          - "integration/api:integration-api:integration/api"
          - "integration/sync:integration-sync:integration/sync"
          - "kpi/read:kpi-read:kpi/read"
          - "kpi/sync:kpi-sync:kpi/sync"
          - "message-pusher:message-pusher:message-pusher"
          - "message:message:message"
          - "mission/read:mission-read:mission/read"
          - "mission/sync:mission-sync:mission/sync"
          - "mission/write:mission-write:mission/write"
          - "notification/read:notification-read:notification/read"
          - "notification/sync:notification-sync:notification/sync"
          - "notification/write:notification-write:notification/write"
          - "payment:payment:payment"
          - "push-notification:push-notification:push-notification"
          - "queue/api:queue-api:queue/api"
          - "queue/consumer:queue-consumer:queue/consumer"
          - "queue/sync:queue-sync:queue/sync"
          - "receipt-scan:receipt-scan:receipt-scan"
          - "report/read:report-read:report/read"
          - "report/sync:report-sync:report/sync"
          - "report/write:report-write:report/write"
          - "reward/read:reward-read:reward/read"
          - "reward/sync:reward-sync:reward/sync"
          - "reward/write:reward-write:reward/write"
          - "store/read:store-read:store/read"
          - "store/sync:store-sync:store/sync"
          - "store/write:store-write:store/write"
          - "user/read:user-read:user/read"
          - "user/sync:user-sync:user/sync"
          - "user-wallet/read:user-wallet-read:user-wallet/read"
          - "user-wallet/sync:user-wallet-sync:user-wallet/sync"
          - "user-wallet/write:user-wallet-write:user-wallet/write"
          - "user/write:user-write:user/write"
    runs-on: ubuntu-latest

    steps:
      - name: Matrix splitter
        run: |
          # Divide a combinação da matriz em partes separadas por ':'
          IFS=':' read -r app repository docker_args <<< "${{ matrix.combination }}"
          
          # Cria a variável repo com o valor formatado
          repo="endvrio/app-$repository"
          
          # Define as variáveis como outputs
          echo "repo=$repo" >> $GITHUB_ENV
          echo "app=$app" >> $GITHUB_ENV
          echo "repository=$repository" >> $GITHUB_ENV
          echo "docker_args=$docker_args" >> $GITHUB_ENV

    outputs:
      repo: ${{ steps.set-vars.outputs.repo }}
      app: ${{ steps.set-vars.outputs.app }}
      repository: ${{ steps.set-vars.outputs.repository }}
      docker_args: ${{ steps.set-vars.outputs.docker_args }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get branch name
        id: branch
        uses: tj-actions/branch-names@v6

      - name: Docker - Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Docker - Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker - Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: endvrteam
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker - Build image and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          build-args: |
            APP=${{ needs.build-applications.outputs.app }}
          tags: ${{ needs.build-applications.outputs.repo }}:${{ github.sha }}

      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL }}
            text: "Failure in the Build and Deploy process for the image ${{ needs.build-applications.outputs.app }}. Error in the Build step.\n\nSee more details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v3
        with:
          path: main

      - name: Get branch name
        id: branch
        uses: tj-actions/branch-names@v6

      - name: Define environment for deploy
        run: |
          if [ "${{ steps.branch.outputs.current_branch }}" == main ]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=${{ steps.branch.outputs.current_branch }}" >> $GITHUB_ENV
          fi

      - name: Prepare deployments repository
        uses: actions/checkout@v3
        with:
          repository: endvrtech/deployments
          path: deployments
          token: ${{ secrets.DEPLOYMENT_PAT }}
          ref: refs/heads/main

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Update image tag
        run: |
          cd deployments/k8s/apps/${{ needs.build-applications.outputs.app }}"/overlays/${{ env.ENVIRONMENT }}
          kustomize edit set image appimage=${{ needs.build-applications.outputs.repo }}:${{ github.sha }}

      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL }}
            text: "Failure in the Deploy process for the ${{ env.ENVIRONMENT }} environment of the application ${{ needs.build-applications.outputs.repo }}. Error in the Deploy step.\n\nSee more details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
